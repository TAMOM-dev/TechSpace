// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechSpace.ProductManager.Persistence;

#nullable disable

namespace TechSpace.ProductManager.Persistence.Migrations
{
    [DbContext(typeof(TechSpaceDbContext))]
    partial class TechSpaceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TachSpace.ProductManager.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("a1b2c3d4-e5f6-47a8-9b10-c11d12e13f14"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CPU"
                        },
                        new
                        {
                            CategoryId = new Guid("b2c3d4e5-f6a7-48b9-1c2d-3e4f5a6b7c8d"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Motherboard"
                        },
                        new
                        {
                            CategoryId = new Guid("c3d4e5f6-a7b8-49c0-2d3e-4f5a6b7c8d9e"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "RAM"
                        },
                        new
                        {
                            CategoryId = new Guid("d4e5f6a7-b8c9-4ad1-3e4f-5a6b7c8d9e0f"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "GPU"
                        },
                        new
                        {
                            CategoryId = new Guid("e5f6a7b8-c9d0-4be2-4f5a-6b7c8d9e0f1a"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Storage"
                        },
                        new
                        {
                            CategoryId = new Guid("f6a7b8c9-d0e1-4cf3-5a6b-7c8d9e0f1a2b"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PSU"
                        },
                        new
                        {
                            CategoryId = new Guid("a7b8c9d0-e1f2-4d14-6b7c-8d9e0f1a2b3c"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Case"
                        },
                        new
                        {
                            CategoryId = new Guid("b8c9d0e1-f2a3-4e25-7c8d-9e0f1a2b3c4d"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Peripherals"
                        });
                });

            modelBuilder.Entity("TachSpace.ProductManager.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("f1a1c2b3-4d5e-678f-9012-3456789abcde"),
                            CategoryId = new Guid("a1b2c3d4-e5f6-47a8-9b10-c11d12e13f14"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "13th Gen Intel Core i9 processor with 24 cores and 32 threads for extreme performance.",
                            ImageUrl = "https://example.com/images/intel-i9-13900k.jpg",
                            Name = "Intel Core i9-13900K",
                            Price = 599.99m,
                            Stock = 15
                        },
                        new
                        {
                            ProductId = new Guid("a2b3c4d5-6e7f-8901-2345-6789abcdef01"),
                            CategoryId = new Guid("a1b2c3d4-e5f6-47a8-9b10-c11d12e13f14"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "16-core, 32-thread unlocked processor for high-end gaming and productivity.",
                            ImageUrl = "https://example.com/images/ryzen-9-7950x.jpg",
                            Name = "AMD Ryzen 9 7950X",
                            Price = 549.99m,
                            Stock = 20
                        },
                        new
                        {
                            ProductId = new Guid("b3c4d5e6-7f89-0123-4567-89abcdef0123"),
                            CategoryId = new Guid("b2c3d4e5-f6a7-48b9-1c2d-3e4f5a6b7c8d"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "High-end ATX motherboard with PCIe 5.0, DDR5 support, and advanced cooling.",
                            ImageUrl = "https://example.com/images/asus-z790-e.jpg",
                            Name = "ASUS ROG STRIX Z790-E",
                            Price = 429.99m,
                            Stock = 10
                        },
                        new
                        {
                            ProductId = new Guid("c4d5e6f7-8901-2345-6789-abcdef012345"),
                            CategoryId = new Guid("c3d4e5f6-a7b8-49c0-2d3e-4f5a6b7c8d9e"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "High-performance DDR5 memory with RGB lighting for gaming PCs.",
                            ImageUrl = "https://example.com/images/corsair-vengeance-ddr5.jpg",
                            Name = "Corsair Vengeance RGB DDR5 32GB (2x16GB)",
                            Price = 189.99m,
                            Stock = 30
                        },
                        new
                        {
                            ProductId = new Guid("d5e6f789-0123-4567-89ab-cdef01234567"),
                            CategoryId = new Guid("d4e5f6a7-b8c9-4ad1-3e4f-5a6b7c8d9e0f"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Flagship gaming GPU with 24GB GDDR6X memory and real-time ray tracing.",
                            ImageUrl = "https://example.com/images/rtx-4090.jpg",
                            Name = "NVIDIA GeForce RTX 4090",
                            Price = 1599.99m,
                            Stock = 5
                        },
                        new
                        {
                            ProductId = new Guid("e6f78901-2345-6789-abcd-ef0123456789"),
                            CategoryId = new Guid("e5f6a7b8-c9d0-4be2-4f5a-6b7c8d9e0f1a"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "High-speed NVMe SSD with read speeds up to 7000MB/s for fast gaming and file access.",
                            ImageUrl = "https://example.com/images/samsung-980-pro.jpg",
                            Name = "Samsung 980 PRO 2TB NVMe SSD",
                            Price = 229.99m,
                            Stock = 25
                        },
                        new
                        {
                            ProductId = new Guid("f7890123-4567-89ab-cdef-0123456789ab"),
                            CategoryId = new Guid("f6a7b8c9-d0e1-4cf3-5a6b-7c8d9e0f1a2b"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Fully modular 80 PLUS Gold certified PSU for high-performance PCs.",
                            ImageUrl = "https://example.com/images/corsair-rm850x.jpg",
                            Name = "Corsair RM850x 850W Power Supply",
                            Price = 139.99m,
                            Stock = 18
                        },
                        new
                        {
                            ProductId = new Guid("89012345-6789-abcd-ef01-23456789abcd"),
                            CategoryId = new Guid("a7b8c9d0-e1f2-4d14-6b7c-8d9e0f1a2b3c"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Premium mid-tower case with tempered glass side panel and excellent airflow.",
                            ImageUrl = "https://example.com/images/nzxt-h710.jpg",
                            Name = "NZXT H710 ATX Mid Tower Case",
                            Price = 169.99m,
                            Stock = 12
                        },
                        new
                        {
                            ProductId = new Guid("90123456-789a-bcde-f012-3456789abcde"),
                            CategoryId = new Guid("b8c9d0e1-f2a3-4e25-7c8d-9e0f1a2b3c4d"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Customizable mechanical gaming keyboard with hot-swappable switches.",
                            ImageUrl = "https://example.com/images/logitech-g-pro-x.jpg",
                            Name = "Logitech G Pro X Mechanical Keyboard",
                            Price = 129.99m,
                            Stock = 40
                        },
                        new
                        {
                            ProductId = new Guid("01234567-89ab-cdef-0123-456789abcdef"),
                            CategoryId = new Guid("b8c9d0e1-f2a3-4e25-7c8d-9e0f1a2b3c4d"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Lightweight wireless gaming mouse with 30K DPI sensor for competitive play.",
                            ImageUrl = "https://example.com/images/razer-deathadder-v3-pro.jpg",
                            Name = "Razer DeathAdder V3 Pro Wireless Mouse",
                            Price = 149.99m,
                            Stock = 35
                        });
                });

            modelBuilder.Entity("TachSpace.ProductManager.Domain.Entities.Product", b =>
                {
                    b.HasOne("TachSpace.ProductManager.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TachSpace.ProductManager.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
